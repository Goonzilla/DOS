dofile( "class" )
dofile( "api/button" )

local b = { }

function restart( )
	utils.debug( "Reboot button clicked" )
	sleep( 2 )
	os.reboot( )
end

function drawDesktop( )
		term.clear( )
		-- draw widgets
		utils.clock( )
		-- utils.drawButton( 12, 16, "Reboot" )
		for i,n in ipairs( b ) do
			n:draw( )
		end
		-- other stuff
		term.setCursorPos( 1, 1 )
end

if not term.isColor( ) then
        print( "An advanced computer is required." )
        return
end

mon = peripheral.wrap( "left" )
mon.setTextScale( 0.5 )
term.redirect( mon )

local missing = 0
if not os.loadAPI( "api/utils" ) then missing = 1 end

if missing == 1 then
		print( "A required API is missing." )
		return
end

utils.debugInit( )
utils.init( )

table.insert( b, button:new( 20, 20, "Reboot", restart ) )

drawDesktop( )
-- draw the home screen
while true do
	drawDesktop( )
	os.startTimer( 1 )
	local event, button, clickX, clickY = os.pullEventRaw( )

	term.setCursorPos( 1, 2 )
	if event == "monitor_touch" then
		utils.debug( "Touchscreen Event: (" .. clickX .. "," .. clickY .. ")" )
		for i,n in ipairs( b ) do
			local x1, y1, x2, y2 = n:getBounds( )
			if clickX >= x1 and clickX <= x2 and clickY >= y1 and clickY <= y2 then
				n:click( )
			end
		end
	elseif event == "terminate" then
		utils.debug( "Terminating." )
		term.restore( )
		break
	elseif event ~= "timer" then
		utils.debug( "Event: " .. event )
	end
end

term.restore( )

